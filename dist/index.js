"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _express = _interopRequireWildcard(require("express"));

var _morgan = _interopRequireDefault(require("morgan"));

var _dotenv = require("dotenv");

var _debug = _interopRequireDefault(require("debug"));

var _swaggerUiExpress = _interopRequireDefault(require("swagger-ui-express"));

var _swaggerJsdoc = _interopRequireDefault(require("swagger-jsdoc"));

var _routes = _interopRequireDefault(require("./routes"));

var _cors = _interopRequireDefault(require("cors"));

(0, _dotenv.config)();
var debug = (0, _debug["default"])('dev');
var PORT = process.env.PORT || 6000;
var options = {
  // List of files to be processes. You can also set globs './routes/*.js'
  apis: ['./server/index.js'],
  basePath: '/',
  swaggerDefinition: {
    // Like the one described here: https://swagger.io/specification/#infoObject
    info: {
      description: 'Social Media Lite API with autogenerated swagger doc',
      swagger: '2.0',
      title: 'Law API',
      contact: {
        name: "Adeyemi Adekorede Adeseyi"
      },
      servers: ["http://localhost:5000"],
      version: '1.0.0'
    }
  }
};
var specs = (0, _swaggerJsdoc["default"])(options);
var app = (0, _express["default"])();
app.use((0, _cors["default"])());
app.use((0, _morgan["default"])('dev'));
app.use((0, _express.json)());
app.use((0, _express.urlencoded)({
  extended: false
}));
app.use("/api-docs", _swaggerUiExpress["default"].serve, _swaggerUiExpress["default"].setup(specs));
/**
 * @swagger
 * /:
 *  get:
 *    description: Use to test if app is working
 *    responses:
 *      '200':
 *        description: A successful response
 */

app.get('/', function (request, response) {
  response.status(200).send('Welcome to Social Media app');
});
app.use('/api/v1', _routes["default"]);
app.use('*', function (request, response) {
  response.status(404).send('Not Found');
});
app.listen(PORT, function () {
  return console.log("Server started on port ".concat(PORT));
});
var _default = app;
exports["default"] = _default;